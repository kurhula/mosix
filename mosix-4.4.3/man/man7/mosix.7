.\" copyright (c) 2005 - 2015, Amnon Barak, all rights reserved.
.\" MOSIX(TM) is a registered trademark of Amnon Barak and Amnon Shiloh.
.\"
.\" THIS MANUAL IS PROVIDED IN ITS "AS IS" CONDITION, WITH NO WARRANTY
.\" WHATSOEVER. NO LIABILITY OF ANY KIND FOR DAMAGES WHATSOEVER RESULTING
.\" FROM THE USE OF THIS MANUAL WILL BE ACCEPTED.
.\"
.Dd "January 2014"
.ds section M7
.ds operating-system MOSIX
.ds document-title MOSIX
.ds volume MOSIX Description
.ds date-string January 2014
.ds vT MOSIX Reference Manual
.Sh NAME
.Nm \&MOSIX
.Nd sharing the power of clusters and multi-cluster private clouds
.Sh INTRODUCTION
.Nm \&MOSIX
is a generic solution for dynamic management of resources in a cluster or
in a multi-cluster private cloud. MOSIX allows users to draw the most
out of all the connected computers, including utilization of idle computers.
.Pp
At the core of MOSIX are adaptive resource sharing algorithms, applying
preemptive process migration based on processor loads, memory and I/O
demands of the processes, thus causing the cluster or the multi-cluster
to work cooperatively similar to a single computer with many processors.
.Pp
Unlike earlier versions of MOSIX, only programs that are started by the
.Pa mosrun(1)
utility are affected and can be considered \&"migratable\&" -
other programs are considered as \&"standard Linux programs\&"
and are not affected by MOSIX.
.Pp
MOSIX maintains a high level of compatiblity with standard Linux, so that
binaries of almost every application that runs under Linux can run completely
unmodified under MOSIX.
The exceptions are usually system-administration or graphic utilities
that would not benefit from process-migration anyway.
If a MOSIX program that was started by
.Pa mosrun(1)
attempts to use unsupported features, it will either be killed with an
appropriate error message, or if a ``do not kill'' option is selected,
an error is returned to the program: such programs should probably run
as standard Linux programs.
.Pp
In order to improve the overall resource usage, MOSIX processes
may be moved automatically and transparently to other nodes within the
cluster or even the multi-cluster private cloud.
As the demands for resources change, processes may move again, as many
times as necessary, to continue optimizing the overall resource utilization,
subject to the inter-cluster priorities and policies.
Manual-control over process migration is also supported.
.Pp
.Pa MOSIX
is particularly suitable for running CPU-intensive computational programs
with unpredictable resource usage and run times, and programs with
moderate amounts of I/O.  Programs that perform large amounts of I/O
should better be run as standard Linux programs.
.Sh REQUIREMENTS
.Bl -enum
.It
All nodes must run a suitable Linux kernel, which can be either:
.sp
.Bl -tag -compact -width ab
.It A.
Any Linux kernel version 3.12 or higher.
.It B.
Any kernel from a Linux distribution based on Linux kernel
.br
version 3.12 or higher.
.It C.
Any Linux kernel generated by an older MOSIX distribution,
.br
version 3.4.0.0 or higher.
.It D.
A standard kernel from OpenSUSE version 13.1 or higher.
.El
.It
All participating nodes must be connected to a network that supports
TCP/IP and UDP/IP, where each node has a unique IP address in the range
0.1.0.0 to 255.255.254.255 that is accessible to all the other nodes.
.It
TCP/IP ports 252-253 and UDP/IP ports 249 and 253 must be available
for MOSIX (not used by other applications or blocked by a firewall).
.It
The architecture of all nodes must be x86_64 (64-bit).
.It
All the processors (cores) of a node must be of the same speed.
.It
Specific CPUs have added non-standard features, in particular Intel's
SSE4.1 and SSE4.2 standards, which are not present on either older Intel
processors or in AMD processors.    Newer versions of the "glibc" library
(> glibc-2.8) detect those features during process-initialisation and
record their presence for later optimisations.
Unfortunately, this means that a process which started on a node that has
those features will be unable to migrate to nodes that do not have them
(if it does, it could crash with an "Illegal Instruction" fault).
Accordingly, you should not mix newer Intel processors in the same MOSIX
cluster (or multi-cluster) with older Intel processors or with AMD computers.
Alternately, re-compile the "glibc" library with the "--disable-multi-arch"
flag.
.It
The system-administrators of all the connected nodes must be able to trust
each other (see more on SECURITY below).
.El
.Sh CLUSTER AND MULTI-CLUSTER PRIVATE CLOUD
.Pp
The MOSIX concept of a "cluster" is a collection of computers that
are owned and managed by the same entity (a person, a group of people
or a project) - this can at times be quite different than a hardware cluster,
as each MOSIX cluster
may range from a single workstation to a large combination of computers
- workstations, servers, blades, multi-core computers, etc. possibly of
different speeds and number of processors and possibly in different locations.
.Pp
A MOSIX multi-cluster private cloud (often shortened to "multi-cluster") is a
collection of clusters that may belong to different, yet trusting, entities
(owners) who wish to share their resources subject to certain administrative
conditions.  In particular, when an owner needs its computers - these
computers must be returned immediately to the exclusive use of their owner.
An owner can also assign priorities to guest processes of other owners,
defining who can use their computers and when.
Typically, an owner is an individual user, a group of users or a department
that own the computers.  The multi-cluster private cloud is usually restricted,
due to trust and security reasons, to a single organization, possibly in
various sites/branches or even across the world.
.Pp
MOSIX supports dynamic multi-cluster configurations, where clusters can join
and leave at any time.
When resources become scarce (because other clusters leave or claim their
resources and processes must migrate back to their home-clusters),
MOSIX has a freezing feature that can automatically freeze
excess processes to prevent memory-overload on the home-nodes.
.Sh CONFIGURATION
To configure MOSIX interactively, simply run
.Pa mosconf :
it will lead you step-by-step through the various configuration items.
.Pp
.Pa Mosconf
can be used in two ways:
.Bl -enum -width a
.It
To configure the local node (press <Enter> at the first question).
.It
To configure MOSIX for other nodes: this is typically done on a server
that stores an image of the root-partition for some or all of the
cluster-nodes.
This image can, for example, be NFS-mounted by the cluster-nodes, or otherwise
copied or reflected to them by any other method:
at the first question, enter the path to the stored root-image.
.El
.Pp
There is no need to stop MOSIX in order to modify the configuration -
most changes will take effect within a minute.  However, after modifying
the list of nodes in the cluster
.Pa ( "/etc/mosix/mosix.map" )
or
.Pa "/etc/mosix/mosip" ,
you should run the command
.Pa \&"mossetpe\&"
(but when you are using
.Pa mosconf
to configure your local node, this is not necessary).
.Pp
Below is a detailed description of the MOSIX configuration files
(if you prefer to edit them manually).
.Pp
The directory
.Pa /etc/mosix
should include at least the subdirectories
.Pa /etc/mosix/partners , /etc/mosix/var
and the following files:
.Bl -tag -width abcde
.It Pa /etc/mosix/mosix.map
This file defines which computers participate in your MOSIX cluster.
The file contains up to 256 data lines and/or alias lines that can appear in
any order.  It may also include any number of comment lines beginning with
a '#', as well as empty lines.
.Pp
Data lines have 2 or 3 fields:
.Bl -enum
.It
The IP ("a.b.c.d" or host-name) of the first node in a range of nodes
with consecutive IPs.
.It
The number of nodes in that range.
.It
The optional letter 'p' for "proximate", meaning that the network to those
nodes is fast, so data-compression should not be used during migration.
.El
.Pp
Alias lines are of the form:
.br
.in +4
.Pa a.b.c.d\=e.f.g.h
.in -4
.br
or
.br
.in +4
.Pa a.b.c.d\=host-name
.in -4
.Pp
They indicate that the IP address on the left-hand-side refers to the same
node as the right-hand-side.
.Pp
.Pa NOTES:
.Bl -enum
.It
When using host names, the first result of
.Pa gethostbyname(3)
must return their IP address that is to be used by MOSIX:
if in doubt - specify the IP address.
.It
The right-hand-side in alias lines must either appear within the data lines
or refer a node belonging to another cluster within the MOSIX multi-cluster.
.It
IP addresses 0.0.x.x and 255.255.255.x are not allowed in MOSIX.
.It
If you change
.Pa /etc/mosix/mosix.map
while MOSIX is running, you need to run
.Pa mossetpe
to notify MOSIX of the changes.
.El
.It Pa /etc/mosix/secret
This is a security file that is used to prevent ordinary users from
interfering and/or compromizing security by connecting to the internal
MOSIX TCP ports.  The file should contain just a single line with a password
that must be identical on all the nodes of the cluster/multi-cluster.
This file must be accessible to ROOT only (chmod 600!)
.El
.Pp
The following files are optional:
.Bl -tag -width abcde
.It Pa /etc/mosix/userview.map
Although it is possible to use only IP numbers and/or host-names
to specify nodes in your cluster (and multi-cluster), it is 
more convenient to use small integers as node numbers:
this file allows you to map integers to IP addresses.
Each line in this file contains 3 elements:
.sp
.Bl -enum -compact
.It
A node number (1-65535)
.It
IP1 (or host-name, clearly identifiable by
.Pa gethostbyname(3) )
.It
Number of nodes in range (the number of the last one must not exceed 65535)
.El
.Pp
It is up to the cluster administrator to map as few or as many nodes as
they wish out of their cluster and multi-cluster -
the most common practice is to map all the nodes in one's cluster,
but not in other clusters.
.It Pa /etc/mosix/speed
If this file exists, it should contain a positive integer (1-10,000,000),
providing the relative speed of the processor: the bigger the faster.
It is recommended to set the speed of the most typical processor in your
cluster(s) to 10,000, then the others accordingly.
.Pp
If this file is absent, then the speed is assumed to be 10000.
.Pp
As some processors do better than others with certain types of applications,
in setting the processor's speed, the system-administrator should,
when possible, take into account the typical applications that users
intend to run on the MOSIX cluster(s).
.It Pa /etc/mosix/mosip
This file contains our IP address, to be used for MOSIX
purposes, in the regular format -
.Pa a.b.c.d .
This file is only necessary when the node's IP address is ambiguous:
it can be safely omitted if the output of
.Pa ifconfig(8)
("inet" or "inet addr:") matches exactly one of the IP addresses listed in the
data lines of
.Pa /etc/mosix/mosix.map .
.It Pa /etc/mosix/freeze.conf
This file sets the freezing policies (affecting all MOSIX process
originating in this node).  The lines in this file can appear in any order.
.Pp
An automatic freezing policy is defined by a line with the following
space-separated fields:
.Bl -tag -compact -width abcde
.It 1. the number '1'.
.It 2. load-units:
Used in fields #3-#6 below: 0=processes; 1=standard-load
.It 3. RED-MARK (floating point)
Freeze when load is higher.
.It 4. BLUE-MARK (floating point)
Unfreeze when load is lower.
.It 5. minautofreeze (floating point)
Freeze processes that are evacuated back home on arrival if load
gets equal or above this.
.It 6. minclustfreeze (floating point)
Freeze processes that are evacuated back to this cluster on arrival if load
gets equal or above this.
.It 7. min-keep	
Keep running at least this number of processes -
even if load is above RED-MARK.
.It 8. max-procs
Freeze excess processes above this number - even if load is below BLUE-MARK.
.It 9. slice
.br
Time (in minutes) that a process is allowed to run while
there are automatically-frozen process(es). After this period,
the running process will be frozen and a frozen process will start to run.
.It 10. killing-memory
Freezing fails when there is insufficient disk-space to save the memory-image
of the frozen process - kill processes that failed to freeze and have above
this number of MegaBytes of memory.  Processes with less memory are kept alive
(and in memory).  Setting this value to 0, causes processes
to be killed when freezing fails.  Setting it to a very high
value (like 1000000 MegaBytes) keeps all processes alive.
.El
.Pp
.Pa NOTES:
.Bl -enum
.It
The load-units in fields #3-#6 depend on field #2.  If 0, each unit
represents the load created by a CPU-bound process
on this computer.  If 1, each unit represents the load created by a
CPU-bound process on a "standard" MOSIX computer (e.g.  a 3GHz Intel
Core 2 Duo E6850).  The difference is that the faster the computer and
the more processors it has, the load created by each CPU process decreases
proportionally.
.It
Fields #3,#4,#5,#6 are floating-point, the rest are integers.
.It
A value of "-1" in fields #3,#5,#6,#8 means ignoring that feature.
.It
The first 4 fields are mandatory: omitted fields beyond them have the
following values: minautofreeze=-1,minclusterfreeze=-1,min-keep=0,
max-procs=-1,slice=20.
.It
The RED-MARK must be significantly higher than BLUE-MARK: otherwise
a perpetual cycle of freezing and unfreezing could occur.
You should allow at least 1.1 processes difference between them.
.It
Frozen processes do not respond to anything, except an unfreeze request
or a signal that kills them.
.It
Processes that were frozen manually are not unfrozen automatically.
.El
.Pp
This file may also contain lines starting with '/' to indicate
freezing-directory names.  A "Freezing directory" is an existing
directory (often a mount-point) where the memory contents of frozen
process is saved.  For successful freezing, the disk-partition of
freezing-directories should have sufficient free disk-space to contain
the memory image of all the frozen processes.
.Pp
If more than one freezing directory is listed, the freezing directory
is chosen at random by each freezing process.  It is also possible to
assign selection probabilities by adding a numeric weight after the
directory-name, for example:
.in +5
.sp
/tmp       2
.br
/var/tmp   0.5
.br
/mnt/tmp   2.5
.sp
In this example, the total weight is 2+0.5+2.5=5, so out of every 10 frozen
processes, an average of 4 (10*2/5) will be frozen to
.Pa /tmp ,
an average of 1 (10*0.5/5) to
.Pa /var/tmp
and an average of 5 (10*2.5/5) to
.Pa /mnt/tmp .
.in -5
.sp
When the weight is missing, it defaults to 1.
A weight of 0 means that this directory should be used only if all others
cannot be accessed.
.sp
If no freezing directories are specified, all freezing will be to the
.Pa /freeze
directory (or symbolic-link).
.Pp
Freezing files are usually created with "root" (Super-User) permissions,
but if
.Pa /etc/mosix/freeze.conf
contains a line of the form:
.br
.in +6
.Pa U {UID}
.in -6
.br
then they are created with permissions of the given numeric
.Pa UID
(this is sometimes needed when freezing to NFS directories that do not
allow "root" access).
.It Pa /etc/mosix/partners/*
If your cluster is part of a multi-cluster private cloud, then each file in
.Pa /etc/mosix/partners
describes another cluster that you want this cluster to cooperate with.
.Pp
The file-names should indicate the corresponding cluster-names
(maximum 128 characters), for example: "geography", "chemistry",
"management", "development", "sales", "students-lab-A", etc.
The format of each file is a follows:
.sp
.Bl -tag -compact -width abcde
.It Pa Line #1:
A verbal human-readable description of the cluster.
.It Pa Line #2:
Three space-separated integers as follows:
.sp
.Bl -tag -compact -width abcdefg
.It 1. Priority:
0-65535, the lower the better.
.br
The priority of the local cluster is always 0.
MOSIX gives precedence to processes with higher priority -
if they arrive, guests with lower priority will be expelled.
.It 2. Cango:
.br
0=never send local processes to that cluster.
.br
1=local processes may go to that cluster.
.It 3. Cantake:
0=do not accept guest-processes from that cluster.
.br
1=accept guest-processes from that cluster.
.El
.It Pa Following lines:
Each line describes a range of consecutive IP addresses that are
believed to be part of the other cluster, containing 5 space-separated
items as follows:
.sp
.Bl -tag -compact -width abc
.It 1. IP1 (or host-name):
First node in range.
.It 2. n:
Number of nodes in this range.
.It 3. Obsolete: should be '1'.
.It 4. Obsolete: should be '1'.
.It 5. Proximate:
.Bl -tag -compact -width abcdef
.It 0=no
Use compression on migration to/from that cluster.
.It 1=yes
Do not use compression when migrating to/from that cluster
(network is very fast and CPU is slow).
.El
.El
.El
.Pa NOTES:
.Bl -enum
.It
When using host names rather than IP addresses, the first result of
.Pa gethostbyname(3)
must return their IP address that is used by MOSIX:
if in doubt - specify the IP address instead.
.It
IP addresses 0.0.x.x and 255.255.255.x cannot be used in MOSIX.
.El
.It Pa /etc/mosix/private.conf
This file specifies where Private Temporary Files (PTFs) are stored:
PTFs are an important feature of
.Pa mosrun(1)
and may consume a significant amount of disk-space.  It is important
to ensure that sufficient disk-space is reserved for PTFs,
but without allowing them to disturb other processes by filling up
disk-partitions.
Guest processes can also demand unpredictable amounts of disk-space
for their PTFs, so we must make sure that they do not disturb local operations.
.Pp
Up to 3 different directories can be specified:
for local processes; guest-processes from the local cluster;
and guest-processes from other clusters in the multi-cluster private cloud.
Accordingly, each line in this file has 3 fields:
.sp
.Bl -enum -compact
.It
A combination of the letters: 'O' (own node), 'C' (own cluster) and 'G'
(other clusters).  For example,
.Pa OC , C , CG
or
.Pa OCG.
.It
A directory name (usually a mount-point) starting with '/', where PTFs
for the above processes are to be stored.
.It
An optional numeric limit, in Megabytes, of the total size of PTFs
per-process.
.El
.sp
If
.Pa /etc/mosix/private.conf
does not exist, then all PTFs will be stored in "/private".
If the directory "/private" also does not exist, or if
.Pa /etc/mosix/private.conf
exists but does not contain a line with an appropriate letter in the
first field ('O', 'C' or 'G'), then no disk-space is allocated for PTFs
of the affected processes, which usually means that processes requiring PTFs
will not be able to run on this node.  Such guest processes that start
using PTFs will migrate back to their home-nodes.
.Pp
When the third field is missing, it defaults to:
.in +8
5 Gigabytes for local processes.
.br
2 Gigabytes for processes from the same cluster.
.br
1 Gigabyte for processes from other clusters.
.in -8
In any case, guest processes cannot exceed the size limit of their home-node
even on nodes that allow them more space.
.It Pa /etc/mosix/retainpri
This file contains an integer, specifying a delay in seconds:
how early after all MOSIX processes of a certain priority (priorities
are defined as above in
.Pa /etc/mosix/partners/*
and the current priority can be seen in
.Pa /proc/mosix/priority )
finish (or leave) to allow processes of lower priority (higher numbers)
to start.
When this file is absent, there is no delay and processes with lower priority
may arrive as soon as there are no processes with a higher priority.
.It Pa /etc/mosix/maxguests
If this file exists, it should contain one line with an integer limit
on the number of simultaneous guest-processes from other clusters
(otherwise, the maximum number of guest-processes from other clusters
is unlimited).  A second integer may be added by
.Pa 'mosctl closemulti'
in order to restore the former value
in a subsequent
.Pa 'mosctl openmulti' .
.It Pa /etc/mosix/.log_mosrun
When this file is present, information about invocations of
.Pa mosrun(1)
and process migrations will be recorded in the system-log
(by default "/var/log/messages" on most Linux distributions).
.El
.Sh INTERFACE FOR PROGRAMS
.Pp
The following interface is provided for programs running under
.Pa mosrun(1)
that wish to interface with their MOSIX run-time environment:
.Pp
All access to MOSIX is performed via the "open" system call, but
the use of "open" is incidental and does not involve actual
opening of files.  If the program were to run as a regular Linux program,
those "open" calls would fail, returning -1, since the quoted files never
exist, and
.Pa errno(3)
would be set to ENOENT.
.sp
.Pa open("/proc/self/{special}", 0)
.br
reads a value from the MOSIX run-time environment.
.sp
.Pa open("/proc/self/{special}", 1|O_CREAT, newval)
.br
writes a value to the MOSIX run-time environment.
.sp
.Pa open("/proc/self/{special}", 2|O_CREAT, newval)
.br
both writes a new value and return the previous value.
.Pp
(the
.Pa O_CREAT
flag is only required when your program is compiled with the 64-bit
file-size option, but is harmless otherwise).
.Pp
Some "files" are read-only, some are write-only and some can do both (rw).
The "files" are as follows:
.Pp
.Bl -tag -width abcde
.It Pa /proc/self/migrate
writing a 0 migrates back home;
writing -1 causes a migration consideration;
writing the unsigned value of an IP address or
a logical node number, attempts to migrate there.
Successful migration returns 0, failure returns -1. (write only)
.It Pa /proc/self/lock
When locked (1), no automatic migration may occur
(except when running on the current node is no longer allowed);
when unlocked (0), automatic migration can occur. (rw)
.It Pa /proc/self/freezable
When 1, the process can be automatically frozen.  When 0, it cannot. (rw)
.It Pa /proc/self/whereami
reads where the program is running:
0 if at home, otherwise usually an unsigned IP address, but if possible,
its corresponding logical node number. (read only)
.It Pa /proc/self/nmigs
reads the total number of migrations performed by this process
and its MOSRUN ancesstors before it was born. (read only)
.It Pa /proc/self/sigmig
Reads/sets a signal number (1-64 or 0 to cancel) to be received after each
migration. (rw)
.It Pa /proc/self/needmem
Reads/modifies the process's memory requirement in Megabytes, so it does not
automatically migrate to nodes with less free memory.  Acceptable values
are 0-262143.  (rw)
.It Pa /proc/self/unsupportok
when 0, unsupported system-calls cause the process to be killed;
when 1 or 2, unsupported system-calls return -1 with errno set to ENOSYS;
when 2, an appropriate error-message will also be written to stderr. (rw)
.It Pa /proc/self/clear
clears process statistics. (write only)
.It Pa /proc/self/cpujob
Normally when 0, system-calls and I/O are taken into account for
migration considerations.  When set to 1, they are ignored. (rw)
.It Pa /proc/self/decayrate
Reads/modifies the decay-rate per second (0-10000):
programs can alternate between periods of intensive CPU and periods of
demanding I/O.  Decisions to migrate should be based neither on momentary
program behaviour nor on extremely long term behaviour, so a balance must be
struck, where old process statistics gradually decay in favour of
newer statistics.  The lesser the decay rate, the more weight is given
to new information.  The higher the decay rate, the more weight is given to
older information.  This option is provided for users who
know well the cyclic behavior of their program. (rw)
.It Pa /proc/self/checkpoint
When writing (any value) - perform a checkpoint.
When only reading - return the version number of the next checkpoint to be made.
When reading and writing - perform a checkpoint and return its version.
Returns -1 if the checkpoint fails,
0 if writing only and checkpoint is successful. (rw)
.It Pa /proc/self/checkpointfile
The third argument
.Pa ( newval )
is a pointer to a file-name to be used as the basis for future checkpoints
(see
.Pa mosrun(1) ) .
(write only)
.It Pa /proc/self/checkpointlimit
Reads/modifies the maximal number of checkpoint files to create before
recycling the checkpoint version number.
A value of 0 unlimits the number of checkpoints files.
The maximal value allowed is 10000000.
.It Pa /proc/self/checkpointinterval
When writing, sets the interval in minutes for automatic checkpoints (see
.Pa mosrun(1) ) .
A value of 0 cancels automatic checkpoints.
The maximal value allowed is 10000000.
Note that writing has a side effect of reseting the time left to
the next checkpoint. Thus, writing too frequently is not recommended.
(rw)
.El
.sp
.Pa open("/proc/self/in_cluster", O_CREAT, node);
.in +7
return 1 if the given
.Pa node
is in the same cluster, 0 otherwise.
The
.Pa node
can be either an unsigned, host-order IP address, or a node-number
(listed in
.Pa /etc/mosix/userview.map ) .
.in -7
.Pp
More functions are available through the
.Pa direct_communication(7)
feature.
.Sh STARTING MOSIX
.Pp
To start MOSIX, run
.Pa /etc/init.d/mosix start .
Alternately, run
.Pa mosd .
.Sh SECURITY
All nodes within a MOSIX cluster and multi-cluster private cloud must trust
each other's super-user(s) - otherwise the security of the whole cluster or
multi-cluster is compromized.
.Pp
Hostile computers must not be allowed physical access to the internal MOSIX
network where they could masquerade as having IP addresses of trusted nodes.
.Sh SEE ALSO
.Xr mosrun 1 ,
.Xr mosctl 1 ,
.Xr mosmigrate 1 ,
.Xr mossetpe 1 ,
.Xr mosmon 1 ,
.Xr mosps 1 ,
.Xr mostimeof 1 ,
.Xr moskillall 1 ,
.Xr mosq 1 ,
.Xr mosbestnode 1 ,
.Xr mospipe 1 ,
.Xr mos_in_job 1 ,
.Xr direct_communication 7 .
